apiVersion: v1
kind: Namespace
metadata:
  name: asw
---
# CONNESSIONI
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: asw
  name: connessioni
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: connessioni
  template:
    metadata:
      labels:
        app: goodmusic
        service: connessioni
    spec:
      containers:
        - name: connessioni-container
          image: stefanomoerelli02/asw-goodmusic-connessioni-kube
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 3
            initialDelaySeconds: 600
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: connessioni
spec:
  selector:
    app: goodmusic
    service: connessioni
  type: NodePort 
  ports:
  - port: 8080
    targetPort: 8080
---
# Database CONNESSIONI
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: asw
  name: connessioni-db
spec:
  serviceName: connessioni-db
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: connessioni-db
  template:
    metadata:
      labels:
        app: goodmusic
        service: connessioni-db
    spec:
      containers:
        - name: connessioni-db-container
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: connessionidb
          ports:
            - containerPort: 5432
  # Rimosso il volumeClaimTemplates
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: connessioni-db
spec:
  selector:
    app: goodmusic
    service: connessioni-db
  type: NodePort
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
# RECENSIONI
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: asw
  name: recensioni
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: recensioni
  template:
    metadata:
      labels:
        app: goodmusic
        service: recensioni
    spec:
      containers:
        - name: recensioni-container
          image: stefanomoerelli02/asw-goodmusic-recensioni-kube
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 3
            initialDelaySeconds: 600
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: recensioni
spec:
  selector:
    app: goodmusic
    service: recensioni
  type: NodePort 
  ports:
  - port: 8080
    targetPort: 8080
---
# Database RECENSIONI
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: asw
  name: recensioni-db
spec:
  serviceName: recensioni-db
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: recensioni-db
  template:
    metadata:
      labels:
        app: goodmusic
        service: recensioni-db
    spec:
      containers:
        - name: recensioni-db-container
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: recensionidb
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: "/var/lib/postgresql"
              name: pvc-recensioni-db
  volumeClaimTemplates:
    - metadata:
        name: pvc-recensioni-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: recensioni-db
spec:
  selector:
    app: goodmusic
    service: recensioni-db
  type: NodePort
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# RECENSIONI-SEGUITE
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: asw
  name: recensioni-seguite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: recensioni-seguite
  template:
    metadata:
      labels:
        app: goodmusic
        service: recensioni-seguite
    spec:
      containers:
        - name: recensioni-seguite-container
          image: stefanomoerelli02/asw-goodmusic-recensioni-seguite-kube
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 3
            initialDelaySeconds: 600
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: recensioni-seguite
spec:
  selector:
    app: goodmusic
    service: recensioni-seguite
  type: NodePort 
  ports:
  - port: 8080
    targetPort: 8080
---

# Database RECENSIONI-SEGUITE
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: asw
  name: recensioni-seguite-db
spec:
  serviceName: recensioni-seguite-db
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: recensioni-seguite-db
  template:
    metadata:
      labels:
        app: goodmusic
        service: recensioni-seguite-db
    spec:
      containers:
        - name: recensioni-seguite-db-container
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: recensioni-seguitedb
          ports:
            - containerPort: 5432
  # Rimosso il volumeClaimTemplates
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: recensioni-seguite-db
spec:
  selector:
    app: goodmusic
    service: recensioni-seguite-db
  type: NodePort
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---

# API GATEWAY
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: asw
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goodmusic
      service: api-gateway
  template:
    metadata:
      labels:
        app: goodmusic
        service: api-gateway
    spec:
      containers:
        - name: api-gateway-container
          image: stefanomoerelli02/asw-goodmusic-api-gateway-kube
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 3
            initialDelaySeconds: 600
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 10         
---
apiVersion: v1
kind: Service
metadata:
  namespace: asw
  name: api-gateway
spec:
  selector:
    app: goodmusic
    service: api-gateway
  type: NodePort 
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: goodmusic-ing
  namespace: asw
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /  # Aggiunta per rimuovere il prefisso (opzionale)
spec:
  ingressClassName: nginx  # Utilizzare il controller NGINX (modifica se usi un altro controller)
  rules:
    - host: goodmusic.asw.io  # Nome del dominio per l'ingresso
      http:
        paths:
          - path: /  # Riguarda tutte le richieste
            pathType: Prefix
            backend:
              service:
                name: api-gateway  # Servizio API Gateway
                port:
                  number: 8080  # Porta del servizio API Gateway

---
# SERVICE DISCOVERY
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: asw
  name: service-discovery-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: asw
  name: service-discovery-reader-binding
subjects:
  - kind: Group
    name: system:serviceaccounts
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: service-discovery-reader
  apiGroup: ""
